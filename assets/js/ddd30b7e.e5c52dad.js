"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[1926],{2805:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var n=t(4848),i=t(8453);const s={title:"Mirroring",sidebar_position:60,weight:5},o=void 0,a={id:"traffic-management/mirroring",title:"Mirroring",description:"In this task, you will learn how to use the Istio's traffic mirroring capability.",source:"@site/docs/20-traffic-management/60-mirroring.md",sourceDirName:"20-traffic-management",slug:"/traffic-management/mirroring",permalink:"/docs/traffic-management/mirroring",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/20-traffic-management/60-mirroring.md",tags:[],version:"current",sidebarPosition:60,frontMatter:{title:"Mirroring",sidebar_position:60,weight:5},sidebar:"trafficManagementSidebar",previous:{title:"Circuit Breaking",permalink:"/docs/traffic-management/circuit-breaking"}},l={},c=[];function h(e){const r={code:"code",em:"em",img:"img",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.p,{children:"In this task, you will learn how to use the Istio's traffic mirroring capability."}),"\n",(0,n.jsx)(r.p,{children:"Traffic mirroring is a powerful concept that enables introducing new features/changes into production with the least amount of risk. Mirroring copies live traffic and sends it to a mirrored service. The mirrored traffic occurs outside of the critical request path for the primary service."}),"\n",(0,n.jsxs)(r.p,{children:["In this taks, all traffic will be directed to v1 of the ",(0,n.jsx)(r.em,{children:"reviews"})," service, but when logging with the user ",(0,n.jsx)(r.em,{children:"tester"}),", traffic will be routed to reviews",":v2",". You will create a VirtualService rule to force all traffic that go to v2, to be mirrored and directed to a mirror service, which can be helpful for troubleshooting, testing, or monitorization."]}),"\n",(0,n.jsx)(r.p,{children:"Assuming you have already the bookinfo application deployed with the three versions of the reviews service."}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-shell",children:"kubectl get po -n test | grep reviews\n"})}),"\n",(0,n.jsx)(r.p,{children:"Output:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-shell",children:"reviews-v1-9c6bb6658-gsf5p       2/2     Running   0          14h\r\nreviews-v2-8454bb78d8-qthqq      2/2     Running   0          14h\r\nreviews-v3-6dc9897554-894cg      2/2     Running   0          14h\n"})}),"\n",(0,n.jsx)(r.p,{children:"Create a DestinationRule to define a subset for the versions available for the reviews service"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-yaml",children:"kubectl apply -n test -f - <<EOF\r\napiVersion: networking.istio.io/v1alpha3\r\nkind: DestinationRule\r\nmetadata:\r\n  name: reviews\r\nspec:\r\n  host: reviews # reviews.<namespace>.svc.cluster.local\r\n  subsets: \r\n  - name: v1\r\n    labels:\r\n      version: v1 # label attached to Pod definition\r\n  - name: v2\r\n    labels:\r\n      version: v2 # label attached to Pod definition\r\n  - name: v3\r\n    labels:\r\n      version: v3 # label attached to Pod definition\r\nEOF\n"})}),"\n",(0,n.jsx)(r.p,{children:"Now, let's deploy another application, that you will mirror traffic to, from the reviews service. This application will listen to the HTTP requests and write the contents of the header in the logs."}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-yaml",children:"kubectl apply -n test -f - <<EOF\r\napiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  name: mirror\r\n  labels:\r\n    app: mirror\r\n    version: v1\r\n    #app.kubernetes.io/part-of: Mirror\r\nspec:\r\n  replicas: 1\r\n  selector:\r\n    matchLabels:\r\n      app: mirror\r\n  template:\r\n    metadata:\r\n      labels:\r\n        app: mirror\r\n        version: v1\r\n    spec:\r\n      containers:\r\n        - name: mirror\r\n          image: mendhak/http-https-echo\r\n          ports:\r\n            - containerPort: 9080\r\n              protocol: TCP\r\n            - containerPort: 9443\r\n              protocol: TCP\r\n          env:\r\n            - name: HTTP_PORT\r\n              value: '9080'\r\n            - name: HTTPS_PORT\r\n              value: '9443'\r\nEOF\n"})}),"\n",(0,n.jsx)(r.p,{children:"Next, configure a service for it"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-yaml",children:"kubectl apply -n test -f - <<EOF\r\napiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  name: mirror\r\n  labels:\r\n    app: mirror\r\n    service: mirror\r\nspec:\r\n  ports:\r\n  - port: 9080\r\n    name: http\r\n  selector:\r\n    app: mirror\r\nEOF\n"})}),"\n",(0,n.jsxs)(r.p,{children:["Now, we need to mirror the traffic when traffic routed to reviews",":v2",". Traffic will be routed to reviews",":v2"," only when logging with the user ",(0,n.jsx)(r.em,{children:"tester"})]}),"\n",(0,n.jsxs)(r.p,{children:["Create a VirtualService with the following mirroring routing role, which will route all traffic to reviews",":v1"," by default, but when logging with the user ",(0,n.jsx)(r.em,{children:"tester"}),", the traffic will be routed to reviews",":v2"," that 100% of it will be mirrored to the mirror service."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-yaml",children:"kubectl apply -n test -f - <<EOF\r\napiVersion: networking.istio.io/v1alpha3\r\nkind: VirtualService\r\nmetadata:\r\n  name: reviews\r\nspec:\r\n  hosts:\r\n    - reviews\r\n  http:\r\n  - match:\r\n    - headers:\r\n        end-user:\r\n          exact: tester\r\n    route:\r\n    - destination:\r\n        host: reviews\r\n        subset: v2\r\n    mirror:\r\n      host: mirror\r\n    mirror_percent: 100\r\n  - route:\r\n    - destination:\r\n        host: reviews\r\n        subset: v1\r\nEOF\n"})}),"\n",(0,n.jsxs)(r.p,{children:["As a result of this rule, when you hit the product page, any traffic goes to reviews",":v2"," will be mirrored to the mirror servcie."]}),"\n",(0,n.jsxs)(r.p,{children:["So let's see how it works, by hitting the productpage without logging, and you will notice that the page displays reviews",":v1",".\r\n",(0,n.jsx)(r.img,{alt:"productpage-with-no-user-identity_v1",src:t(7863).A+"",width:"1837",height:"869"})]}),"\n",(0,n.jsxs)(r.p,{children:["Now, let's open ",(0,n.jsx)(r.strong,{children:"Kiali"}),". Get the DNS name of the AWS ALB of Kilai, then hit it in the browser."]}),"\n",(0,n.jsxs)(r.p,{children:["Navigate to ",(0,n.jsx)(r.em,{children:"Workloads"})," in the Kiali dashboard. Choose the ",(0,n.jsx)(r.em,{children:"mirror"})," pod. Then, hit the ",(0,n.jsx)(r.em,{children:"Logs"}),' tab, make sure that the the boxe next to the container "mirror"is ticked.']}),"\n",(0,n.jsxs)(r.p,{children:["Finally, set the ",(0,n.jsx)(r.em,{children:"Time Range"})," to ",(0,n.jsx)(r.strong,{children:"Last 1m"}),", and the ",(0,n.jsx)(r.em,{children:"Refresh interval"})," to ",(0,n.jsx)(r.strong,{children:"Every 10s"}),"."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.img,{alt:"kilai-mirror-reviews-v1",src:t(519).A+"",width:"1895",height:"601"}),"\r\nNotice here in the logs, that there is no traffic yet mirrored to the mirror service, since we did not login yet with the user ",(0,n.jsx)(r.em,{children:"tester"}),"."]}),"\n",(0,n.jsxs)(r.p,{children:["Now, let's see what happens when logging with the ",(0,n.jsx)(r.em,{children:"tester"})," user to the productpage?"]}),"\n",(0,n.jsxs)(r.p,{children:["Hit the ",(0,n.jsx)(r.code,{children:"Sign In"})," button, to log in with the ",(0,n.jsx)(r.code,{children:"tester"})," user, with no password:"]}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.img,{alt:"tester-login",src:t(2750).A+"",width:"920",height:"257"})}),"\n",(0,n.jsxs)(r.p,{children:["Then, while logged in as ",(0,n.jsx)(r.em,{children:"tester"}),", refresh the page in the browser to send some requests to the application. The traffic must now be mirrored to the new mirror pod and written into the logs:"]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.img,{alt:"kilai-mirror-reviews-v1",src:t(4108).A+"",width:"1109",height:"901"}),"\r\nSo, by mirroring the traffic, you were able to gather information on internal communication without affecting the actual service, and you saw how the forwarded header end-user contains the user variable you logged with and set in the VirtualService rule (end-user: tester)."]}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.strong,{children:(0,n.jsx)(r.strong,{children:"Note"})})}),"\n",(0,n.jsxs)(r.p,{children:["You can get those logs of the ",(0,n.jsx)(r.em,{children:"mirror"})," pod using the following kubectl command as well:"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-shell",children:'kubectl -n test logs $(kubectl get pod -n test -l app=mirror,version=v1 -o jsonpath="{.items[0].metadata.name}") -c mirror -f\n'})})]})}function d(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},519:(e,r,t)=>{t.d(r,{A:()=>n});const n=t.p+"assets/images/kilai-mirror-reviews-v1-afdef86bb6717b9990b04df511e2f835.png"},4108:(e,r,t)=>{t.d(r,{A:()=>n});const n=t.p+"assets/images/kilai-mirror-reviews-v2-f0c0f8c8fbd5cd570d06ed6002bf43b6.png"},7863:(e,r,t)=>{t.d(r,{A:()=>n});const n=t.p+"assets/images/productpage-with-no-user-identity_v1-756f06c1105d77cca62996e74ae82c7e.png"},2750:(e,r,t)=>{t.d(r,{A:()=>n});const n=t.p+"assets/images/tester-login-742dee03fdd23a8c279474cf1a98eaca.png"},8453:(e,r,t)=>{t.d(r,{R:()=>o,x:()=>a});var n=t(6540);const i={},s=n.createContext(i);function o(e){const r=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(s.Provider,{value:r},e.children)}}}]);